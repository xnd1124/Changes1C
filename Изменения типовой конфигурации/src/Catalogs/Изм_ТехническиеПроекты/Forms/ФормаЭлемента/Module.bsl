#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	КоммитыТехПроекта.Параметры.УстановитьЗначениеПараметра("ТехПроект", Объект.Ссылка);    
	УстановитьПиктограммыСсылок(); 
	ПодсчитатьКоличествоКоммитов();
	УстановитьРодителяМетаданных();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьПиктограммыСсылок(); 
	УстановитьРодителяМетаданных();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПолноеОписание = ТекущийОбъект.ПолноеОписание.Получить();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ПолноеОписание = Новый ХранилищеЗначения(ПолноеОписание);
КонецПроцедуры

#КонецОбласти
#Область ОбработчикиСобытийЭлементовТаблицыФормыИзмененныеМетаданные
&НаКлиенте
Процедура ИзмененныеМетаданныеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Для каждого ВыбраннаяПозиция Из ВыбранноеЗначение Цикл
		НоваяСтрока = Объект.ИзмененныеМетаданные.Добавить();
		НоваяСтрока.ОбъектМетаданных = ВыбраннаяПозиция;
	КонецЦикла;
	УстановитьРодителяМетаданных();
КонецПроцедуры

&НаКлиенте
Процедура ИзмененныеМетаданныеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	УстановитьРодителяМетаданных();
КонецПроцедуры

#КонецОбласти
#Область ОбработчикиСобытийЭлементовТаблицыФормыСсылки
&НаКлиенте
Процедура СсылкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "СсылкиОписание" Тогда    
		СтандартнаяОбработка = Ложь;
		СтрокаСДанными = Объект.Ссылки.НайтиПоИдентификатору(ВыбраннаяСтрока);
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СтрокаСДанными.АдресСсылки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СсылкиПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ОписаниеОповещения = Новый ОписаниеОповещения("РедактированиеСсылкиЗавершение", ЭтотОбъект, ТекущиеДанные);  
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипСсылки", ТекущиеДанные.ТипСсылки);
	ПараметрыФормы.Вставить("АдресСсылки", ТекущиеДанные.АдресСсылки);
	ПараметрыФормы.Вставить("Описание", ТекущиеДанные.Описание);
	ОткрытьФорму("ОбщаяФорма.Изм_ФормаРедактированияСсылки", ПараметрыФормы, ЭтотОбъект, , , , 
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура СсылкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	Отказ = Истина;
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавлениеСсылкиЗавершение", ЭтотОбъект);  
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипСсылки", "");
	ПараметрыФормы.Вставить("АдресСсылки", "");
	ПараметрыФормы.Вставить("Описание", "");
	ОткрытьФорму("ОбщаяФорма.Изм_ФормаРедактированияСсылки", ПараметрыФормы, ЭтотОбъект, , , , 
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Асинх Процедура Подбор(Команда)
	СписокТиповМетаданных = Новый СписокЗначений;
	СписокТиповМетаданных.Добавить("ИдентификаторыОбъектовМетаданных", "Идентификаторы объектов метаданных");
	СписокТиповМетаданных.Добавить("ИдентификаторыОбъектовРасширений", "Идентификаторы объектов расширений");

	ВыбранныйЭлемент = Ждать СписокТиповМетаданных.ВыбратьЭлементАсинх("Выберите тип метаданных");
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ШаблонИмяФормы = "Справочник.%1.ФормаСписка";
	ИмяФормыПодбора = СтрШаблон(ШаблонИмяФормы, ВыбранныйЭлемент.Значение);
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе, МножественныйВыбор, РежимВыбора", Ложь, Истина, Истина);
	ОткрытьФорму(ИмяФормыПодбора, ПараметрыФормы, Элементы.ИзмененныеМетаданные);
КонецПроцедуры

&НаКлиенте
Процедура ИзмененияМетаданных(Команда)
	ТекущиеДанные = Элементы.ИзмененныеМетаданные.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ПараметрыОткрытия = Новый Структура("Ссылка", ТекущиеДанные.ОбъектМетаданных);
    ОткрытьФорму("ОбщаяФорма.Изм_ИзмененияМетаданных", ПараметрыОткрытия, , УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКДанным(Команда)
	ТекущиеДанные = Элементы.ИзмененныеМетаданные.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ИмяФормыМетаданных = ИмяФормыМетаданных(ТекущиеДанные.ОбъектМетаданных); 
	Если ИмяФормыМетаданных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОткрытьФорму(ИмяФормыМетаданных);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокИзКоммитов(Команда)
	ОбновитьСписокИзКоммитовНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ИмяФормыМетаданных(ИдентификаторМетаданных)
	ОбъектМетаданных = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(ИдентификаторМетаданных);
	Имя = ОбъектМетаданных.Имя;
	ШаблонФормы = "%1.%2.%3";
	Если ОбщегоНазначения.ЭтоКонстанта(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "Константа", Имя, "ФормаКонстант"); 
	ИначеЕсли ОбщегоНазначения.ЭтоДокумент(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "Документ", Имя, "ФормаСписка"); 
	ИначеЕсли ОбщегоНазначения.ЭтоЖурналДокументов(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "ЖурналДокументов", Имя, "ФормаСписка");	
	ИначеЕсли ЭтоОтчет(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "Отчет", Имя, "Форма");
	ИначеЕсли ЭтоОбработка(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "Обработка", Имя, "Форма");		
	ИначеЕсли  ОбщегоНазначения.ЭтоСправочник(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "Справочник", Имя, "ФормаСписка"); 	
	ИначеЕсли  ОбщегоНазначения.ЭтоПланВидовХарактеристик(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "ПланВидовХарактеристик", Имя, "ФормаСписка"); 		
	ИначеЕсли  ОбщегоНазначения.ЭтоРегистрСведений(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "РегистрСведений", Имя, "ФормаСписка");
	ИначеЕсли  ОбщегоНазначения.ЭтоРегистрНакопления(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "РегистрНакопления", Имя, "ФормаСписка");		
	ИначеЕсли  ОбщегоНазначения.ЭтоРегистрБухгалтерии(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "РегистрБухгалтерии", Имя, "ФормаСписка");	
	ИначеЕсли  ОбщегоНазначения.ЭтоПланСчетов(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "ПланСчетов", Имя, "ФормаСписка");
	ИначеЕсли  ОбщегоНазначения.ЭтоБизнесПроцесс(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "БизнесПроцесс", Имя, "ФормаСписка");	
	ИначеЕсли  ОбщегоНазначения.ЭтоБизнесПроцесс(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "БизнесПроцесс", Имя, "ФормаСписка");	
	ИначеЕсли  ОбщегоНазначения.ЭтоЗадача(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "Задача", Имя, "ФормаСписка");	
	ИначеЕсли  ОбщегоНазначения.ЭтоПланОбмена(ОбъектМетаданных) Тогда
		Результат = СтрШаблон(ШаблонФормы, "ПланОбмена", Имя, "ФормаСписка");		
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЭтоОтчет(ОбъектМетаданных)
	Возврат Метаданные.Отчеты.Содержит(ОбъектМетаданных);
КонецФункции

&НаСервере
Функция ЭтоОбработка(ОбъектМетаданных)
	Возврат Метаданные.Обработки.Содержит(ОбъектМетаданных);
КонецФункции

&НаСервере
Процедура УстановитьПиктограммыСсылок()
	ТипыСсылок = Объект.Ссылки.Выгрузить(, "ТипСсылки").ВыгрузитьКолонку("ТипСсылки");
	ТипыСсылок = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ТипыСсылок);
	АдресаПиктограмм = Новый Соответствие;
	Для каждого ТипСсылок Из ТипыСсылок Цикл
		АдресаПиктограмм.Вставить(ТипСсылок, ПолучитьНавигационнуюСсылку(ТипСсылок, "Пиктограмма"));
	КонецЦикла; 
	Для каждого Строка Из Объект.Ссылки Цикл
		Строка.АдресПиктограммы = АдресаПиктограмм[Строка.ТипСсылки]; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПодсчитатьКоличествоКоммитов()
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		КоличествоКоммитов = 0;
		Возврат ;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ Количество(1) как Количество
	|ИЗ
	|	Справочник.Изм_Коммиты КАК СправочникИзм_Коммиты
	|ГДЕ
	|	СправочникИзм_Коммиты.ТехническиеПроекты.ТехническийПроект = &ТехПроект";
	
	Запрос.УстановитьПараметр("ТехПроект", Объект.Ссылка);
	
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	
	КоличествоКоммитов =  ТаблицаРезультата[0].Количество;
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеСсылкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДополнительныеПараметры, Результат);
		УстановитьПиктограммыСсылок();
		Модифицированность = Истина; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеСсылкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("Структура") Тогда                   
		НоваяСтрока = Объект.Ссылки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Результат);
		УстановитьПиктограммыСсылок(); 
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьРодителяМетаданных()
	МассивМетаданных = Объект.ИзмененныеМетаданные.Выгрузить(, "ОбъектМетаданных").ВыгрузитьКолонку("ОбъектМетаданных");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИдентификаторыОбъектовМетаданных.Родитель КАК Родитель,
	|	ИдентификаторыОбъектовМетаданных.Ссылка КАК Ссылка,
	|	ИдентификаторыОбъектовМетаданных.Родитель.Имя КАК РодительИмя
	
	|ИЗ
	|	Справочник.ИдентификаторыОбъектовМетаданных КАК ИдентификаторыОбъектовМетаданных
	|ГДЕ
	|	ИдентификаторыОбъектовМетаданных.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИдентификаторыОбъектовРасширений.Родитель,
	|	ИдентификаторыОбъектовРасширений.Ссылка,
	|	ИдентификаторыОбъектовРасширений.Родитель.Имя
	|ИЗ
	|	Справочник.ИдентификаторыОбъектовРасширений КАК ИдентификаторыОбъектовРасширений
	|ГДЕ
	|	ИдентификаторыОбъектовРасширений.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", МассивМетаданных);
	
	Родители = Запрос.Выполнить().Выгрузить();
	Родители.Индексы.Добавить("Ссылка");
	
	Для каждого Строка Из Объект.ИзмененныеМетаданные Цикл      
		НайденнаяСтрока = Родители.Найти(Строка.ОбъектМетаданных, "Ссылка");
		Если НайденнаяСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Строка.Родитель = НайденнаяСтрока.Родитель; 
		Строка.Картинка = КартинкаМетаданных(НайденнаяСтрока.РодительИмя);
	КонецЦикла;
	Объект.ИзмененныеМетаданные.Сортировать("Родитель");
	
КонецПроцедуры

&НаСервере
Функция КартинкаМетаданных(ИмяОбъекта)
	Картинка = Неопределено;
	ШаблонИмениКартинки = "Метаданные%1";
	ИмяКартинки = СтрШаблон(ШаблонИмениКартинки, ИмяОбъекта);
	Попытка
		Возврат БиблиотекаКартинок[ИмяКартинки];
	Исключение
		Возврат Картинка;
	КонецПопытки;
КонецФункции // ()

&НаСервере
Процедура ОбновитьСписокИзКоммитовНаСервере()  
	КоммитыПроекта = КоммитыПроекта();  
	РаспознанныеМетаданные = Новый Соответствие;
	Для каждого Коммит из КоммитыПроекта Цикл                                     
		ОбновитьМетаданныеКоммита(Коммит);
		ЗаполнитьМетаданныеИзКоммита(РаспознанныеМетаданные, Коммит);
	КонецЦикла;	
    ДобавитьМетаданныеВПроект(РаспознанныеМетаданные); 
	УстановитьРодителяМетаданных();
КонецПроцедуры

Процедура ОбновитьМетаданныеКоммита(Коммит)    
	ОбъектКоммит = Коммит.ПолучитьОбъект();
	Изм_СинхронизацияСGitРепозиторием.ЗаполнитьМетаданныеКоммита(ОбъектКоммит);    
	ОбъектКоммит.ДополнительныеСвойства.Вставить("НеОбновлятьМетаданные");
	ОбъектКоммит.Записать();
КонецПроцедуры 

Процедура ДобавитьМетаданныеВПроект(РаспознанныеМетаданные)
	Для Каждого Пара Из РаспознанныеМетаданные Цикл
		ОбъектМетаданных = Пара.Ключ;                
		Отбор = Новый Структура("ОбъектМетаданных", ОбъектМетаданных);
		Если Объект.ИзмененныеМетаданные.НайтиСтроки(Отбор).Количество() > 0 Тогда
			Продолжить;	
		КонецЕсли;	
		НоваяСтрока = Объект.ИзмененныеМетаданные.Добавить();
		НоваяСтрока.ОбъектМетаданных = ОбъектМетаданных;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьМетаданныеИзКоммита(РаспознанныеМетаданные, Коммит)
	Для Каждого Строка Из Коммит.ИзмененныеМетаданные Цикл
		РаспознанныеМетаданные.Вставить(Строка.ОбъектМетаданных);
	КонецЦикла;	
КонецПроцедуры

Функция КоммитыПроекта()  
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Изм_КоммитыТехническиеПроекты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Изм_Коммиты.ТехническиеПроекты КАК Изм_КоммитыТехническиеПроекты
		|ГДЕ
		|	Изм_КоммитыТехническиеПроекты.ТехническийПроект = &ТехническийПроект";
	
	Запрос.УстановитьПараметр("ТехническийПроект", Объект.Ссылка);
	
	Результат= Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат Результат;

КонецФункции

#КонецОбласти

